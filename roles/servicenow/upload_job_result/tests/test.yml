# ansible-playbook roles/servicenow/upload_job_result/tests/test.yml -i roles/servicenow/upload_job_result/tests/inventory --vault-password-file .vault_pass.txt
---
- hosts: all
  gather_facts: yes
  vars_files:
    - test_vars/user_input_vars.yml
    - test_vars/exastro_original_vars.yml
    - test_vars/servicenow_credentials.yml

  pre_tasks:
    - name: Check servicenow servicenow_credentials
      ansible.builtin.assert:
        that:
          - servicenow_instance_url is defined
          - servicenow_target_table_name is defined
          - servicenow_user is defined
          - servicenow_password is defined
        fail_msg: "Required ServiceNow Parameters(instance_url, target_table_name, user, password) is not defined or is empty. Please set them in the playbook or inventory."

    # Create job result file on hosts
    # テスト対象ホスト上にジョブ結果ファイルを作成する
    - name: Create job result directory if it does not exist
      ansible.builtin.file:
        path: "{{ remote_filepath_job_result | dirname }}"
        state: directory

    - name: Copy test job result file to the expected location
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/test_files/sample_job_result.json"
        dest: "{{ remote_filepath_job_result }}"
      register: created_job_result_file

    - name: modify 'comments' in job result file for testing
      ansible.builtin.replace:
        path: "{{ created_job_result_file.dest }}"
        regexp: '"comments": "[^"]*"'
        replace: '"comments": "{{ test_comments }}"'
      vars:
        test_comments: "Executed in host:{{ inventory_hostname }}"

    # Create upload log file on localhost
    # ローカルホスト上にアップロードログファイルを作成する
    - name: Copy test log file to the expected location
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/test_files/sample_log_file.log"
        dest: "{{ remote_filepath_upload_log }}"
      register: created_upload_log_file
      delegate_to: localhost

  roles:
    - role: ../..

  tasks:
    - name: Slurp job result file content
      ansible.builtin.slurp:
        src: "{{ created_job_result_file.dest }}"
      register: slurped_job_result

    - name: Print job result file content
      ansible.builtin.debug:
        msg: "Job Result Content: {{ slurped_job_result.content | b64decode | from_json | to_nice_json }}"
