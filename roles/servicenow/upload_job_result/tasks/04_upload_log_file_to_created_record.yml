---
# タスクの実行に必要な変数が定義されているか確認
# record_sys_id: ServiceNowのレコードのsys_idを指定, 前のタスクで設定されることを想定
# remote_filepath_upload_log: アップロードするログファイルのパスを指定, ユーザーにより設定される
- name: Check required variables
  ansible.builtin.assert:
    that:
      - record_sys_id is defined
      - remote_filepath_upload_log is defined
      - servicenow_instance_url is defined
      - servicenow_target_table_name is defined
      - servicenow_user is defined
      - servicenow_password is defined
    fail_msg: "One or more required variables (record_sys_id, remote_filepath_upload_log, servicenow_instance_url, servicenow_target_table_name, servicenow_user, servicenow_password) are not defined. Please set them in the playbook, inventory, or Vault."

# uriモジュールの実行に必要な一時変数を設定
# servicenow_instance_url: ServiceNowのインスタンスURLを指定, ユーザーにより設定される
# servicenow_target_table_name: ServiceNowのターゲットテーブル名を指定, ユーザーにより設定される
- name: Create Temporary Variable for uri module to upload log file
  ansible.builtin.set_fact:
    _upload_api_endpoint: "{{ servicenow_instance_url | trim('/') }}/api/now/attachment/file?table_name={{ servicenow_target_table_name }}&table_sys_id={{ record_sys_id }}"
    _upload_file_body: "{{ lookup('file', remote_filepath_upload_log) }}"
    _upload_file_name: "{{ remote_filepath_upload_log | basename }}"

# ServiceNowの指定されたテーブルにジョブ結果のログファイルをアップロード
# upload_file_name: アップロードするファイル名を指定, デフォルトではremote_filepath_upload_logからbasenameを取得
- name: Upload log files to ServiceNow
  ansible.builtin.uri:
    url: "{{ _upload_api_endpoint }}&file_name={{ upload_file_name | default(_upload_file_name) }}"
    headers:
      Content-Type: "text/plain"
      Accept: "application/json"
    method: "POST"
    user: "{{ servicenow_user }}"
    password: "{{ servicenow_password }}"
    body: "{{ _upload_file_body }}"
    status_code: 201
    validate_certs: yes
  register: log_upload_response
  failed_when: log_upload_response.status != 201 or 'error' in log_upload_response.json | default({})

# 次のタスクで使用するため、レスポンスからアップロードしたログファイルのsys_idを設定
- name: Set log_file_sys_id from uploaded result
  ansible.builtin.set_fact:
    log_file_sys_id: "{{ log_upload_response.json.result.sys_id }}"
  when:
    - log_upload_response is defined
    # - log_upload_response.json is defined and 'result' in log_upload_response.json
    - ('result' in log_upload_response.json | default({}))
    - log_upload_response.json.result.sys_id is defined
